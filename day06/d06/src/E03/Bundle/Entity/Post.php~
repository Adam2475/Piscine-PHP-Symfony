<?php

namespace E03\Bundle\Entity;

use E01\Bundle\Entity\User;

use Doctrine\ORM\Mapping as ORM;

/**
 * Post
 *
 * @ORM\Table(name="post")
 * @ORM\Entity(repositoryClass="E03\Bundle\Repository\PostRepository")
 */
class Post
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="title", type="string", length=255, unique=true)
     */
    private $title;

    /**
     * @var string
     *
     * @ORM\Column(name="content", type="string", length=255)
     */
    private $content;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="created", type="datetime")
     */
    private $created;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="lastEdit", type="datetime", nullable=true)
     */
    private $lastEdit;

    /**
     * @ORM\ManyToOne(targetEntity="E01\Bundle\Entity\User")
     */
    private $lastEditedBy;

    /**
     * @var string
     *
     * @ORM\ManyToOne(targetEntity="E01\Bundle\Entity\User", inversedBy="posts")
     * @ORM\JoinColumn(name="user_id", referencedColumnName="id", onDelete="CASCADE")
     */
    private $author;

    /**
     * @ORM\OneToMany(targetEntity="E05\Bundle\Entity\Likes", mappedBy="post", cascade={"remove"})
     */
    private $likes;

    /**
     *
     * @ORM\OneToMany(targetEntity="E05\Bundle\Entity\Dislikes", mappedBy="post", cascade={"remove"})
     */
    private $dislikes;

    /**
     * Get id
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set title
     *
     * @param string $title
     *
     * @return Post
     */
    public function setTitle($title)
    {
        $this->title = $title;

        return $this;
    }

    /**
     * Get title
     *
     * @return string
     */
    public function getTitle()
    {
        return $this->title;
    }

    /**
     * Set content
     *
     * @param string $content
     *
     * @return Post
     */
    public function setContent($content)
    {
        $this->content = $content;

        return $this;
    }

    /**
     * Get content
     *
     * @return string
     */
    public function getContent()
    {
        return $this->content;
    }

    /**
     * Set created
     *
     * @param \DateTime $created
     *
     * @return Post
     */
    public function setCreated($created)
    {
        $this->created = $created;

        return $this;
    }

    /**
     * Get created
     *
     * @return \DateTime
     */
    public function getCreated()
    {
        return $this->created;
    }

    /**
     * Set author
     *
     * @param string $author
     *
     * @return Post
     */
    public function setAuthor($author)
    {
        $this->author = $author;

        return $this;
    }

    /**
     * Get author
     *
     * @return string
     */
    public function getAuthor()
    {
        return $this->author;
    }

    /**
     * Set likes
     *
     * @param integer $likes
     *
     * @return Post
     */
    public function setLikes($likes)
    {
        $this->likes = $likes;

        return $this;
    }

    /**
     * Get likes
     *
     * @return integer
     */
    public function getLikes()
    {
        return $this->likes;
    }

    /**
     * Set dislikes
     *
     * @param integer $dislikes
     *
     * @return Post
     */
    public function setDislikes($dislikes)
    {
        $this->dislikes = $dislikes;

        return $this;
    }

    /**
     * Get dislikes
     *
     * @return integer
     */
    public function getDislikes()
    {
        return $this->dislikes;
    }
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->likes = new \Doctrine\Common\Collections\ArrayCollection();
        $this->dislikes = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Add like
     *
     * @param \E05\Bundle\Entity\Likes $like
     *
     * @return Post
     */
    public function addLike(\E05\Bundle\Entity\Likes $like)
    {
        $this->likes[] = $like;

        return $this;
    }

    /**
     * Remove like
     *
     * @param \E05\Bundle\Entity\Likes $like
     */
    public function removeLike(\E05\Bundle\Entity\Likes $like)
    {
        $this->likes->removeElement($like);
    }

    /**
     * Add dislike
     *
     * @param \E05\Bundle\Entity\Dislikes $dislike
     *
     * @return Post
     */
    public function addDislike(\E05\Bundle\Entity\Dislikes $dislike)
    {
        $this->dislikes[] = $dislike;

        return $this;
    }

    /**
     * Remove dislike
     *
     * @param \E05\Bundle\Entity\Dislikes $dislike
     */
    public function removeDislike(\E05\Bundle\Entity\Dislikes $dislike)
    {
        $this->dislikes->removeElement($dislike);
    }

    /**
     * Set lastEdit
     *
     * @param \DateTime $lastEdit
     *
     * @return Post
     */
    public function setLastEdit($lastEdit)
    {
        $this->lastEdit = $lastEdit;

        return $this;
    }

    /**
     * Get lastEdit
     *
     * @return \DateTime
     */
    public function getLastEdit()
    {
        return $this->lastEdit;
    }
}
